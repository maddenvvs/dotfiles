// Place your key bindings in this file to override the defaults
[
    // Make ctrl+ยง to work on MacOS.
    {
        "key": "ctrl+[IntlBackslash]",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    // Make ctrl+space to show IntelliSense in the editor window.
    {
        "key": "ctrl+space",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    // Action bar hotkeys instead of the default ones.
    {
        "key": "cmd+k e",
        "command": "workbench.view.explorer",
        "when": "!explorerViewletVisible",
    },
    {
        "key": "cmd+k e",
        "command": "workbench.action.closeSidebar",
        "when": "explorerViewletVisible",
    },
    {
        "key": "cmd+k g",
        "command": "workbench.view.scm",
        "when": "activeViewlet != 'workbench.view.scm'",
    },
    {
        "key": "cmd+k g",
        "command": "workbench.action.closeSidebar",
        "when": "activeViewlet == 'workbench.view.scm'",
    },
    {
        "key": "cmd+k x",
        "command": "workbench.view.extensions",
        "when": "activeViewlet != 'workbench.view.extensions'"
    },
    {
        "key": "cmd+k x",
        "command": "workbench.action.closeSidebar",
        "when": "activeViewlet == 'workbench.view.extensions'"
    },
    {
        "key": "cmd+k b",
        "command": "workbench.action.toggleSidebarVisibility",
    },
    // File explorer.
    {
        "key": "cmd+r",
        "command": "workbench.files.action.refreshFilesExplorer",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    // Multi-curson.
    {
        "key": "cmd+k cmd+d",
        "command": "editor.action.moveSelectionToNextFindMatch",
        "when": "editorFocus && editorHasMultipleSelections",
    },
    {
        "key": "cmd+shift+d",
        "command": "editor.action.moveSelectionToPreviousFindMatch",
        "when": "editorFocus && editorHasMultipleSelections",
    },
    // Terminal panels.
    {
        "key": "ctrl+w \\",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus",
    },
    {
        "key": "ctrl+w c",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus",
    },
    {
        "key": "ctrl+w h",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus",
    },
    {
        "key": "ctrl+w l",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus",
    },
    {
        "key": "ctrl+w ,",
        "command": "workbench.action.terminal.resizePaneLeft",
        "when": "terminalFocus",
    },
    {
        "key": "ctrl+w .",
        "command": "workbench.action.terminal.resizePaneRight",
        "when": "terminalFocus",
    },
    // Color schemes.
    {
        "key": "cmd+k t",
        "command": "workbench.action.toggleLightDarkThemes",
    },
    // Workspaces.
    {
        "key": "cmd+k r",
        "command": "workbench.action.openRecent",
    },
    // IntelliSense.
    {
        "key": "cmd+r",
        "command": "workbench.action.gotoSymbol",
    },
    {
        "key": "cmd+shift+r",
        "command": "workbench.action.showAllSymbols",
    },
    {
        "key": "cmd+g d",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus",
    },
    // Neovim.
    // Pass Ctrl+s command to save the current buffer.
    {
        "command": "vscode-neovim.send",
        "key": "ctrl+s",
        "when": "editorTextFocus",
        "args": "<C-S>",
    },
    // nvim-treesitter incremental selection.
    {
        "command": "vscode-neovim.send",
        "key": "ctrl+space",
        "when": "editorTextFocus && (neovim.mode == normal || neovim.mode == visual)",
        "args": "<C-Space>",
    },
]
